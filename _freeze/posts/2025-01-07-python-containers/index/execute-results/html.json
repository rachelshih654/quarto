{
  "hash": "842e84495ab30fc2024a7ca4a46ea705",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Python 容器: list, tuple, set, dict\"\ndescription: \"整理 Python 常用的容器，包含 list, tuple, set, dict\"\ndate: \"2025-01-07\"\ncategories: [Python]\nimage: \"/assets/images/py_containers.png\"\n---\n\n\n## 常用排行\n\n::: {#6af51d3b .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<style type=\"text/css\">\n#T_26b89_row0_col0, #T_26b89_row0_col1, #T_26b89_row0_col2, #T_26b89_row1_col0, #T_26b89_row1_col1, #T_26b89_row1_col2, #T_26b89_row2_col0, #T_26b89_row2_col1, #T_26b89_row2_col2, #T_26b89_row3_col0, #T_26b89_row3_col1, #T_26b89_row3_col2, #T_26b89_row4_col0, #T_26b89_row4_col1, #T_26b89_row4_col2, #T_26b89_row5_col0, #T_26b89_row5_col1, #T_26b89_row5_col2, #T_26b89_row6_col0, #T_26b89_row6_col1, #T_26b89_row6_col2, #T_26b89_row7_col0, #T_26b89_row7_col1, #T_26b89_row7_col2, #T_26b89_row8_col0, #T_26b89_row8_col1, #T_26b89_row8_col2, #T_26b89_row9_col0, #T_26b89_row9_col1, #T_26b89_row9_col2, #T_26b89_row10_col0, #T_26b89_row10_col1, #T_26b89_row10_col2, #T_26b89_row11_col0, #T_26b89_row11_col1, #T_26b89_row11_col2, #T_26b89_row12_col0, #T_26b89_row12_col1, #T_26b89_row12_col2, #T_26b89_row13_col0, #T_26b89_row13_col1, #T_26b89_row13_col2, #T_26b89_row14_col0, #T_26b89_row14_col1, #T_26b89_row14_col2 {\n  text-align: left;\n}\n</style>\n<table id=\"T_26b89\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th id=\"T_26b89_level0_col0\" class=\"col_heading level0 col0\" >Code</th>\n      <th id=\"T_26b89_level0_col1\" class=\"col_heading level0 col1\" >Description</th>\n      <th id=\"T_26b89_level0_col2\" class=\"col_heading level0 col2\" >Rating</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_26b89_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n      <td id=\"T_26b89_row0_col0\" class=\"data row0 col0\" ><a href=\"#list-列表\">list.append()</a></td>\n      <td id=\"T_26b89_row0_col1\" class=\"data row0 col1\" >新增元素到列表尾端</td>\n      <td id=\"T_26b89_row0_col2\" class=\"data row0 col2\" >⭐⭐⭐⭐⭐</td>\n    </tr>\n    <tr>\n      <th id=\"T_26b89_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n      <td id=\"T_26b89_row1_col0\" class=\"data row1 col0\" ><a href=\"#dict-字典\">dict['key']</a></td>\n      <td id=\"T_26b89_row1_col1\" class=\"data row1 col1\" >取得字典值</td>\n      <td id=\"T_26b89_row1_col2\" class=\"data row1 col2\" >⭐⭐⭐⭐⭐</td>\n    </tr>\n    <tr>\n      <th id=\"T_26b89_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n      <td id=\"T_26b89_row2_col0\" class=\"data row2 col0\" ><a href=\"#基本操作\">len()</a></td>\n      <td id=\"T_26b89_row2_col1\" class=\"data row2 col1\" >取得容器長度</td>\n      <td id=\"T_26b89_row2_col2\" class=\"data row2 col2\" >⭐⭐⭐⭐⭐</td>\n    </tr>\n    <tr>\n      <th id=\"T_26b89_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n      <td id=\"T_26b89_row3_col0\" class=\"data row3 col0\" ><a href=\"#list-列表\">list[index]</a></td>\n      <td id=\"T_26b89_row3_col1\" class=\"data row3 col1\" >索引存取</td>\n      <td id=\"T_26b89_row3_col2\" class=\"data row3 col2\" >⭐⭐⭐⭐⭐</td>\n    </tr>\n    <tr>\n      <th id=\"T_26b89_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n      <td id=\"T_26b89_row4_col0\" class=\"data row4 col0\" ><a href=\"#dict-字典\">dict.get()</a></td>\n      <td id=\"T_26b89_row4_col1\" class=\"data row4 col1\" >安全取得字典值</td>\n      <td id=\"T_26b89_row4_col2\" class=\"data row4 col2\" >⭐⭐⭐⭐</td>\n    </tr>\n    <tr>\n      <th id=\"T_26b89_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n      <td id=\"T_26b89_row5_col0\" class=\"data row5 col0\" ><a href=\"#set-集合\">set.add()</a></td>\n      <td id=\"T_26b89_row5_col1\" class=\"data row5 col1\" >新增元素到集合</td>\n      <td id=\"T_26b89_row5_col2\" class=\"data row5 col2\" >⭐⭐⭐⭐</td>\n    </tr>\n    <tr>\n      <th id=\"T_26b89_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n      <td id=\"T_26b89_row6_col0\" class=\"data row6 col0\" ><a href=\"#list-列表\">list.extend()</a></td>\n      <td id=\"T_26b89_row6_col1\" class=\"data row6 col1\" >合併列表</td>\n      <td id=\"T_26b89_row6_col2\" class=\"data row6 col2\" >⭐⭐⭐</td>\n    </tr>\n    <tr>\n      <th id=\"T_26b89_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n      <td id=\"T_26b89_row7_col0\" class=\"data row7 col0\" ><a href=\"#dict-字典\">dict.items()</a></td>\n      <td id=\"T_26b89_row7_col1\" class=\"data row7 col1\" >取得鍵值對</td>\n      <td id=\"T_26b89_row7_col2\" class=\"data row7 col2\" >⭐⭐⭐</td>\n    </tr>\n    <tr>\n      <th id=\"T_26b89_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n      <td id=\"T_26b89_row8_col0\" class=\"data row8 col0\" ><a href=\"#set-集合\">set.union()</a></td>\n      <td id=\"T_26b89_row8_col1\" class=\"data row8 col1\" >集合聯集</td>\n      <td id=\"T_26b89_row8_col2\" class=\"data row8 col2\" >⭐⭐⭐</td>\n    </tr>\n    <tr>\n      <th id=\"T_26b89_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n      <td id=\"T_26b89_row9_col0\" class=\"data row9 col0\" ><a href=\"#list-列表\">list.sort()</a></td>\n      <td id=\"T_26b89_row9_col1\" class=\"data row9 col1\" >排序列表</td>\n      <td id=\"T_26b89_row9_col2\" class=\"data row9 col2\" >⭐⭐⭐</td>\n    </tr>\n    <tr>\n      <th id=\"T_26b89_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n      <td id=\"T_26b89_row10_col0\" class=\"data row10 col0\" ><a href=\"#dict-字典\">dict.update()</a></td>\n      <td id=\"T_26b89_row10_col1\" class=\"data row10 col1\" >更新字典</td>\n      <td id=\"T_26b89_row10_col2\" class=\"data row10 col2\" >⭐⭐</td>\n    </tr>\n    <tr>\n      <th id=\"T_26b89_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n      <td id=\"T_26b89_row11_col0\" class=\"data row11 col0\" ><a href=\"#tuple-元組\">tuple[index]</a></td>\n      <td id=\"T_26b89_row11_col1\" class=\"data row11 col1\" >存取元組元素</td>\n      <td id=\"T_26b89_row11_col2\" class=\"data row11 col2\" >⭐⭐</td>\n    </tr>\n    <tr>\n      <th id=\"T_26b89_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n      <td id=\"T_26b89_row12_col0\" class=\"data row12 col0\" ><a href=\"#set-集合\">set.intersection()</a></td>\n      <td id=\"T_26b89_row12_col1\" class=\"data row12 col1\" >集合交集</td>\n      <td id=\"T_26b89_row12_col2\" class=\"data row12 col2\" >⭐⭐</td>\n    </tr>\n    <tr>\n      <th id=\"T_26b89_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n      <td id=\"T_26b89_row13_col0\" class=\"data row13 col0\" ><a href=\"#list-列表\">list.pop()</a></td>\n      <td id=\"T_26b89_row13_col1\" class=\"data row13 col1\" >移除並回傳元素</td>\n      <td id=\"T_26b89_row13_col2\" class=\"data row13 col2\" >⭐⭐</td>\n    </tr>\n    <tr>\n      <th id=\"T_26b89_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n      <td id=\"T_26b89_row14_col0\" class=\"data row14 col0\" ><a href=\"#dict-字典\">dict.keys()</a></td>\n      <td id=\"T_26b89_row14_col1\" class=\"data row14 col1\" >取得所有鍵</td>\n      <td id=\"T_26b89_row14_col2\" class=\"data row14 col2\" >⭐⭐</td>\n    </tr>\n  </tbody>\n</table>\n```\n:::\n:::\n\n\n## 基本操作\n\n```python\n# 建立空容器\nempty_list = []\nempty_tuple = ()\nempty_set = set()\nempty_dict = {}\n\n# 取得容器長度\nlen(container)\n\n# 判斷元素是否存在\nelement in container\n\n# 容器轉換\nlist(tuple_or_set)  # 轉換為列表\ntuple(list_or_set)  # 轉換為元組\nset(list_or_tuple)  # 轉換為集合\n\n# 清空容器\ncontainer.clear()  # 適用於 list, set, dict\n```\n\n## list 列表\n\n```python\n# 建立列表\nfruits = ['apple', 'banana', 'orange']\nnumbers = list(range(5))  # [0, 1, 2, 3, 4]\n\n# 存取元素\nfruits[0]      # 第一個元素\nfruits[-1]     # 最後一個元素\nfruits[1:3]    # 切片：第二到第三個元素\n\n# 修改元素\nfruits[0] = 'pear'\n\n# 新增元素\nfruits.append('grape')        # 新增到尾端\nfruits.insert(0, 'cherry')   # 指定位置新增\nfruits.extend(['kiwi', 'mango'])  # 合併列表\n\n# 刪除元素\nfruits.remove('banana')    # 刪除指定元素\nfruits.pop()              # 移除並回傳最後一個元素\nfruits.pop(0)             # 移除並回傳指定位置元素\ndel fruits[0]             # 刪除指定位置元素\n\n# 排序\nfruits.sort()             # 原地排序\nfruits.sort(reverse=True) # 反向排序\nsorted(fruits)            # 回傳新的排序列表\n\n# 其他操作\nfruits.index('apple')     # 取得元素索引\nfruits.count('apple')     # 計算元素出現次數\nfruits.reverse()          # 反轉列表\n```\n\n## tuple 元組\n\n```python\n# 建立元組\ncoordinates = (3, 4)\nsingle_item = (1,)  # 單一元素要加逗號\n\n# 存取元素\ncoordinates[0]      # 第一個元素\ncoordinates[-1]     # 最後一個元素\ncoordinates[0:2]    # 切片\n\n# 元組解包\nx, y = coordinates\n\n# 常用操作\nlen(coordinates)    # 取得長度\n3 in coordinates    # 檢查元素是否存在\ncoordinates.count(3)  # 計算元素出現次數\ncoordinates.index(3)  # 取得元素索引\n\n# 元組串接\ncoordinates + (5, 6)  # 回傳新元組\ncoordinates * 2       # 重複元組\n```\n\n## set 集合\n\n```python\n# 建立集合\nfruits = {'apple', 'banana', 'orange'}\nnumbers = set([1, 2, 3, 3])  # 重複元素會被移除\n\n# 新增與刪除\nfruits.add('grape')       # 新增元素\nfruits.remove('apple')    # 刪除元素（元素不存在會報錯）\nfruits.discard('apple')   # 安全刪除（元素不存在不會報錯）\nfruits.pop()             # 隨機移除並回傳一個元素\n\n# 集合運算\nset1 = {1, 2, 3}\nset2 = {3, 4, 5}\n\n# 聯集\nset1 | set2              # 運算子方式\nset1.union(set2)         # 方法方式\n\n# 交集\nset1 & set2              # 運算子方式\nset1.intersection(set2)   # 方法方式\n\n# 差集\nset1 - set2              # 運算子方式\nset1.difference(set2)     # 方法方式\n\n# 對稱差集\nset1 ^ set2              # 運算子方式\nset1.symmetric_difference(set2)  # 方法方式\n\n# 子集與超集\nset1 <= set2             # 子集\nset1.issubset(set2)      # 子集\nset1 >= set2             # 超集\nset1.issuperset(set2)    # 超集\n```\n\n## dict 字典\n\n```python\n# 建立字典\nperson = {\n    'name': 'John',\n    'age': 30,\n    'city': 'Taipei'\n}\n\n# 存取元素\nperson['name']           # 取得值（鍵不存在會報錯）\nperson.get('name')       # 安全取得值（鍵不存在回傳 None）\nperson.get('phone', 'N/A')  # 指定預設值\n\n# 修改與新增\nperson['age'] = 31       # 修改值\nperson['phone'] = '123'  # 新增鍵值對\n\n# 刪除\ndel person['age']        # 刪除鍵值對\nperson.pop('age')        # 移除並回傳值\nperson.popitem()         # 移除並回傳最後一個鍵值對\n\n# 字典方法\nperson.keys()            # 取得所有鍵\nperson.values()          # 取得所有值\nperson.items()           # 取得所有鍵值對\n\n# 更新字典\nperson.update({'age': 32, 'gender': 'M'})\n\n# 字典合併（Python 3.9+）\ndict1 = {'a': 1, 'b': 2}\ndict2 = {'c': 3, 'd': 4}\nmerged = dict1 | dict2   # 合併字典\n\n# 字典推導式\nsquares = {x: x**2 for x in range(5)}\n```\n\n## 容器比較\n\n| 特性 | list | tuple | set | dict |\n|------|------|-------|-----|------|\n| 可變性 | 可變 | 不可變 | 可變 | 可變 |\n| 有序性 | 有序 | 有序 | 無序 | 無序 |\n| 索引存取 | ✓ | ✓ | ✗ | ✗ |\n| 重複元素 | 允許 | 允許 | 不允許 | 不允許(鍵) |\n| 主要用途 | 序列操作 | 不可變序列 | 集合運算 | 鍵值映射 |\n| 建立語法 | `[]` | `()` | `{}` | `{key:value}` |\n\n## 使用建議\n\n1. **list**：\n   - 需要經常修改內容時\n   - 需要保持元素順序時\n   - 允許重複元素時\n\n2. **tuple**：\n   - 資料不應被修改時\n   - 作為字典的鍵時\n   - 需要較好的效能時\n\n3. **set**：\n   - 需要去除重複元素時\n   - 需要進行集合運算時\n   - 需要快速成員檢查時\n\n4. **dict**：\n   - 需要鍵值對映射時\n   - 需要快速查找時\n   - 需要儲存具有屬性的資料時\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}